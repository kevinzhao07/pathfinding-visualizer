{"version":3,"sources":["index.js"],"names":["TableData","val","clicked","endClick","endNode","startClick","startNode","visualized","firstTime","visualize","lastStart","lastEnd","last","document","getElementById","innerHTML","classList","add","remove","hadWallStart","unit","contains","hadWallEnd","listChanged","includes","push","draggable","id","this","props","className","onMouseMove","handleClick","onMouseDown","onMouseUp","setNodes","React","Component","Body","state","dataValue","table","i","row","j","idValue","String","classes","key","clearBoard","clearOtherButtons","elements","getElementsByTagName","x","length","algorithm","findCoords","position","col","substring","parseInt","calcNorth","coord","north","calcEast","east","calcSouth","south","calcWest","west","resolve","point","direction","next","classToAdd","backtrack","element","printPath","array","resolveDepth","a","startCoordinates","breadthCounter","sleep","speed","ansNorth","ansEast","ansSouth","ansWest","pop","endCoords","forwardPath","buttons","getElementsByClassName","depth","breadth","alert","ms","Promise","setTimeout","randomMaze","value","random","Math","floor","resetSpeed","Start","End","RandomSparse","onClick","RandomDense","Visualize","DepthFirst","BreadthFirst","ClearBoard","Fast","Normal","Slow","addEventListener","ReactDOM","render"],"mappings":"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","file":"static/js/main.99615826.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// TableData handles clicks, drawing and erasing walls, etc. \nclass TableData extends React.Component {\n\n  handleClick(val) {\n\n    if (clicked === 1) {\n\n      // allow for visualization while moving end node\n      if ((endClick === endNode || startClick === startNode) && visualized) {\n        firstTime = false;\n        visualize();\n      }\n\n      // we only want animation for startNode to happen one time\n      if (startClick === startNode && val === lastStart) {\n        return; // don't execute rest\n      }\n\n      // we only want animation for endNode to happen one time\n      if (endClick === endNode && val === lastEnd) {\n        return; // don't execute rest\n      }\n\n      // if the starting click was at the startNode\n      if (startClick === startNode) {\n\n        // if we ever venture on TOP of the endNode, stop.\n        if (val === endNode) {\n          return;\n        }\n        \n        // clearing where the startNode was last\n        var last = document.getElementById(lastStart);\n        last.innerHTML = \"\";\n        last.classList.add(\"unit\");\n        last.classList.remove(\"other\");\n        if (hadWallStart) {\n          last.classList.add(\"wall\");\n          last.classList.add(\"none\");\n        }\n        lastStart = val; // this will be the new place of the startNode\n        \n        // adding the new startNode\n        var unit = document.getElementById(val);\n        unit.classList.remove(\"unit\");\n        hadWallStart = false;\n        if (unit.classList.contains(\"wall\")) {\n          hadWallStart = true;\n          unit.classList.remove(\"wall\");\n          unit.classList.remove(\"none\");\n        }\n        unit.classList.add(\"other\");\n        unit.innerHTML = '<i id=\"start-icon\" class=\"far fa-arrow-alt-circle-right start\"></i>';\n\n        return; // don't execute rest\n      }\n\n      // if the starting click was at the endNode\n      if (endClick === endNode) {\n\n        // if we ever venture on TOP of the startNode, stop.\n        if (val === startNode) {\n          return;\n        }\n\n        // clearing where the endNode was last\n        last = document.getElementById(lastEnd);\n        last.innerHTML = \"\";\n        last.classList.add(\"unit\");\n        last.classList.remove(\"other\");\n        if (hadWallEnd) {\n          last.classList.add(\"wall\");\n          last.classList.add(\"none\");\n        }\n        lastEnd = val; // this will be the new place of the endNode\n\n        // adding the new endNode\n        unit = document.getElementById(val);\n        unit.classList.remove(\"unit\");\n        unit.classList.add(\"other\");\n        hadWallEnd = false;\n        if (unit.classList.contains(\"wall\")) {\n          hadWallEnd = true;\n          unit.classList.remove(\"wall\");\n          unit.classList.remove(\"none\");\n        }\n        unit.innerHTML = '<i id=\"end-icon\" class=\"fas fa-gift start\"></i>';\n\n        return; // don't execute rest\n      }\n\n      // don't hightlight the startNode or endNode\n      if (val === startNode || val === endNode) {\n        return;\n      }\n\n      // only modify <td> once on each click. resets after mouseup.\n      unit = document.getElementById(val);\n      if (listChanged.includes(val)) {\n        return;\n      }\n\n      // if wall, remove. if not, add.\n      if (!listChanged.includes(val) && unit.classList.contains(\"wall\")) {\n        listChanged = [];\n        listChanged.push(val);\n        unit.classList.remove(\"wall\");\n        unit.classList.remove(\"visited\");\n        unit.classList.remove(\"animation\");\n        unit.classList.remove(\"no-animation\");\n        unit.classList.remove(\"path\");\n        unit.classList.remove(\"path-animation\");\n        unit.classList.remove(\"none\");\n      }\n      \n      else if (!listChanged.includes(val) && !unit.classList.contains(\"wall\")) {\n        listChanged = [];\n        listChanged.push(val);\n        unit.classList.add(\"wall\");\n        unit.classList.add(\"none\");\n        unit.classList.remove(\"visited\");\n        unit.classList.remove(\"animation\");\n        unit.classList.remove(\"path\");\n        unit.classList.remove(\"path-animation\");\n        unit.classList.remove(\"no-animation\");\n      }\n    }\n  }\n\n  clicked(val) {\n\n    startClick = val;\n    endClick = val;\n    \n    // if start, don't allow color change\n    if (val === startNode || val === endNode) {\n      return;\n    }\n\n    var unit = document.getElementById(val);\n    \n    // doesn't allow for color change twice (once on move, once on button down)\n    if (listChanged.includes(val)) {\n      return;\n    }\n\n    if (!listChanged.includes(val) && !unit.classList.contains(\"wall\")) {\n      listChanged.push(val);\n      unit.classList.add(\"wall\");\n      unit.classList.add(\"none\");\n      unit.classList.remove(\"visited\");\n      unit.classList.remove(\"animation\");\n      unit.classList.remove(\"no-animation\");\n      unit.classList.remove(\"path\");\n      unit.classList.remove(\"path-animation\");\n    }\n    else if (!listChanged.includes(val) && unit.classList.contains(\"wall\")) {\n      listChanged.push(val);\n      unit.classList.remove(\"wall\");\n      unit.classList.remove(\"none\");\n      unit.classList.remove(\"visited\");\n      unit.classList.remove(\"animation\");\n      unit.classList.remove(\"no-animation\");\n      unit.classList.remove(\"path\");\n      unit.classList.remove(\"path-animation\");\n    }\n  }\n\n  // setting nodes to where the new position is\n  setNodes(val) {\n    startNode = lastStart;\n    endNode = lastEnd;\n\n    if (visualized && val === endNode && !firstTime) {\n      visualize();\n    }\n\n  }\n\n  render() {\n    return (\n      <td \n        draggable=\"false\"\n        id={this.props.id} \n        className={this.props.className}\n        onMouseMove={() => this.handleClick(this.props.id)}\n        onMouseDown={() => this.clicked(this.props.id)}\n        onMouseUp={() => this.setNodes(this.props.id)}\n      ></td>\n    );\n  }\n} // end TableData Component\n\n// simple rendering of the entire grid\nclass Body extends React.Component {\n  constructor(props) {\n    super(props); // always needed\n    this.state = {\n      dataValue: true,\n    };\n  }\n\n  render() {\n\n    // creates rows of table\n    let table = [];\n    for (var i = 0; i < 30; ++i) {\n\n      // creates each row\n      let row = [];\n      for (var j = 0; j < 55; ++j) {\n        var idValue = \"\" + String(i) + \"-\" + String(j);\n        var classes = \"unit \";\n        if (j === 54) {\n          classes += \"b-right \";\n        }\n        if (i === 29) {\n          classes += \"b-bottom \";\n        }\n        if (i === 14 && j === 11) {\n          classes = \"other\";\n        }\n        if (i === 14 && j === 43) {\n          classes = \"other\";\n        }\n        row.push(\n          <TableData \n            id={idValue} \n            key={idValue} \n            className={classes}\n          />\n        );\n      }\n      table.push(<tr row={i} key={i}>{row}</tr>);\n    }\n\n    return (\n      <table className=\"grid\">\n        <thead>\n          {table}\n        </thead>\n      </table>\n    );\n  }\n}\n\n// clears the board\nfunction clearBoard() {\n  clearOtherButtons();\n  visualized = false;\n  var elements = document.getElementsByTagName(\"td\");\n  for (var x = 0; x < elements.length; ++x) {\n    elements[x].classList.remove(\"visited\");\n    elements[x].classList.remove(\"path\");\n    elements[x].classList.remove(\"path-animation\");\n    elements[x].classList.remove(\"none\");\n    elements[x].classList.remove(\"animation\");\n    elements[x].classList.remove(\"no-animation\");\n    if (elements[x].classList.contains(\"wall\")) {\n      elements[x].classList.remove(\"wall\");\n    }\n  }\n  algorithm = \"\";\n}\n\n// find coordinate on graph, can use to find <td>\nfunction findCoords(position) {\n  var row = \"\";\n  var col = \"\";\n\n  if (position.length === 3) { // X-X\n    row = position.substring(0, 1);\n    col = position.substring(2);\n  }\n\n  else if (position.length === 5) { // XX-XX\n    row = position.substring(0, 2);\n    col = position.substring(3);\n  }\n\n  // two scenarios: XX-X or X-XX\n  else if (position.length === 4) {\n\n    if (position.substring(1, 2) === \"-\") { // X-XX\n      row = position.substring(0, 1);\n      col = position.substring(2);\n    }\n    else if (position.substring(2, 3) === \"-\" ) { // XX_X\n      row = position.substring(0, 2);\n      col = position.substring(3);\n    }\n  }\n\n  // convert to integers\n  row = parseInt(row, 10);\n  col = parseInt(col, 10);\n\n  return [row, col];\n}\n\n// calculating NESW\nfunction calcNorth(coord) {\n  if (coord[0] - 1 >= 0) {\n    var north = \"\" + String(coord[0] - 1) + \"-\" + String(coord[1]);\n    var northCell = document.getElementById(north);\n    return northCell;\n  }\n  return false;\n}\n\nfunction calcEast(coord) {\n  if (coord[1] + 1 < 55) {\n    var east = \"\" + String(coord[0]) + \"-\" + String(coord[1] + 1);\n    var eastCell = document.getElementById(east);\n    return eastCell;\n  }\n  return false;\n}\n\nfunction calcSouth(coord) {\n  if (coord[0] + 1 < 30) {\n    var south = \"\" + String(coord[0] + 1) + \"-\" + String(coord[1]);\n    var southCell = document.getElementById(south);\n    return southCell;\n  }\n  return false;\n}\n\nfunction calcWest(coord) {\n  if (coord[1] - 1 >= 0) {\n    var west = \"\" + String(coord[0]) + \"-\" + String(coord[1] - 1);\n    var westCell = document.getElementById(west);\n    return westCell;\n  }\n  return false;\n}\n\nfunction resolve(point, direction, next, classToAdd) {\n  if (point !== false) {\n\n    // is the inside of this the end node?\n    if (point.id === lastEnd) {\n\n      if (direction === \"north\") {\n        backtrack[next[0] - 1][next[1]] = \"n\";\n      }\n      else if (direction === \"east\") {\n        backtrack[next[0]][next[1] + 1] = \"e\";\n      }\n      else if (direction === \"south\") {\n        backtrack[next[0] + 1][next[1]] = \"s\";\n      }\n      else if (direction === \"west\") {\n        backtrack[next[0]][next[1] - 1] = \"w\";\n      }\n\n      point.classList.add('visited');\n      element.classList.remove(\"unclickable\");\n      point.classList.add(classToAdd);\n      printPath();\n      return 'stop';\n    }\n\n    // if not, then only mark visited if not wall, not already visited, and not the start node\n    if (!point.classList.contains(\"wall\") && !point.classList.contains(\"visited\") && point.innerHTML === \"\") {\n      point.classList.add(\"visited\");\n      point.classList.add(classToAdd);\n      if (direction === \"north\") {\n        array.push([next[0] - 1, next[1]]);\n        backtrack[next[0] - 1][next[1]] = \"n\";\n      }\n      else if (direction === \"east\") {\n        array.push([next[0], next[1] + 1]);\n        backtrack[next[0]][next[1] + 1] = \"e\";\n      }\n      else if (direction === \"south\") {\n        array.push([next[0] + 1, next[1]]);\n        backtrack[next[0] + 1][next[1]] = \"s\";\n      }\n      else if (direction === \"west\") {\n        backtrack[next[0]][next[1] - 1] = \"w\";\n        array.push([next[0], next[1] - 1]);\n      }\n    }\n  }\n}\n\nfunction resolveDepth(point, direction, next, classToAdd) {\n  if (point !== false) {\n\n    // is the inside of this the end node?\n    if (point.id === lastEnd) {\n\n      if (direction === \"north\") {\n        backtrack[next[0] - 1][next[1]] = \"n\";\n      }\n      else if (direction === \"east\") {\n        backtrack[next[0]][next[1] + 1] = \"e\";\n      }\n      else if (direction === \"south\") {\n        backtrack[next[0] + 1][next[1]] = \"s\";\n      }\n      else if (direction === \"west\") {\n        backtrack[next[0]][next[1] - 1] = \"w\";\n      }\n\n      point.classList.add('visited');\n      element.classList.remove(\"unclickable\");\n      point.classList.add(classToAdd);\n      printPath();\n      return 'stop';\n    }\n\n    // if not, then only mark visited if not wall, not already visited, and not the start node\n    if (!point.classList.contains(\"wall\") && !point.classList.contains(\"visited\") && point.innerHTML === \"\") {\n      point.classList.add(\"visited\");\n      point.classList.add(classToAdd);\n      if (direction === \"north\") {\n        array.push([next[0] - 1, next[1]]);\n        backtrack[next[0] - 1][next[1]] = \"n\";\n      }\n      else if (direction === \"east\") {\n        array.push([next[0], next[1] + 1]);\n        backtrack[next[0]][next[1] + 1] = \"e\";\n      }\n      else if (direction === \"south\") {\n        array.push([next[0] + 1, next[1]]);\n        backtrack[next[0] + 1][next[1]] = \"s\";\n      }\n      else if (direction === \"west\") {\n        backtrack[next[0]][next[1] - 1] = \"w\";\n        array.push([next[0], next[1] - 1]);\n      }\n      return \"continue\";\n    }\n  }\n  return \"nothing\";\n}\n\nasync function breadth() {\n  var classToAdd = \"no-animation\";\n  if (firstTime) {\n    classToAdd = \"animation\";\n    element.classList.add(\"unclickable\");\n  }\n  // remove previous markings and creates 2d array for backtrack\n  backtrack = [];\n  var row = [];\n  var elements = document.getElementsByTagName(\"td\");\n  for (var x = 0; x < elements.length; ++x) {\n    if (row.length !== 54) {\n      row.push('');\n    }\n    else {\n      row = [];\n      backtrack.push(row);\n    }\n    elements[x].classList.remove(\"visited\");\n    elements[x].classList.remove(\"path\");\n    elements[x].classList.remove(\"path-animation\");\n    elements[x].classList.remove(\"animation\");\n    elements[x].classList.remove(\"no-animation\");\n    if (!elements[x].classList.contains(\"wall\")) {\n      elements[x].classList.remove(\"none\");\n    }\n  }\n  \n  // stack/queue\n  array = [];\n  \n  // calculating row and column\n  var startCoordinates = findCoords(lastStart);\n  backtrack[startCoordinates[0]][startCoordinates[1]] = \"*\";\n  array.push(startCoordinates);\n  document.getElementById(lastStart).classList.add(\"visited\");\n  document.getElementById(lastStart).classList.add(classToAdd);\n\n  // while array not empty on depth-first\n  var breadthCounter = 0;\n  while (array.length != 0) {\n    var next;\n    \n    // for breadth-first, don't change array (expensive), just iterate through and add.\n    // until we reach the end\n    if (breadthCounter === array.length) {\n      return;\n    }\n    next = array[breadthCounter];\n    ++breadthCounter;\n\n    // calculates nesw\n    var north = calcNorth(next);\n    var east = calcEast(next);\n    var south = calcSouth(next);\n    var west = calcWest(next);\n\n    // nice animation\n    if (firstTime) {\n      await sleep(speed);\n    }\n\n    if (resolve(north, \"north\", next, classToAdd) === 'stop') {\n      return;\n    }\n    if (resolve(east, \"east\", next, classToAdd) === 'stop') {\n      return;\n    }\n    if (resolve(south, \"south\", next, classToAdd) === 'stop') {\n      return;\n    }\n    if (resolve(west, \"west\", next, classToAdd) === 'stop') {\n      return;\n    }\n\n    if (breadthCounter === array.length) {\n      element.classList.remove('unclickable');\n    }\n  }\n}\n\nasync function depth() {\n  var classToAdd = \"no-animation\";\n  if (firstTime) {\n    classToAdd = \"animation\";\n    element.classList.add(\"unclickable\");\n  }\n  // remove previous markings and creates 2d array for backtrack\n  backtrack = [];\n  var row = [];\n  var elements = document.getElementsByTagName(\"td\");\n  for (var x = 0; x < elements.length; ++x) {\n    if (row.length !== 54) {\n      row.push('');\n    }\n    else {\n      row = [];\n      backtrack.push(row);\n    }\n    elements[x].classList.remove(\"visited\");\n    elements[x].classList.remove(\"path\");\n    elements[x].classList.remove(\"path-animation\");\n    elements[x].classList.remove(\"animation\");\n    elements[x].classList.remove(\"no-animation\");\n    if (!elements[x].classList.contains(\"wall\")) {\n      elements[x].classList.remove(\"none\");\n    }\n  }\n  \n  // stack/queue\n  array = [];\n  \n  // start depth first search, add start node/visited.\n  var startCoordinates = findCoords(lastStart);\n  backtrack[startCoordinates[0]][startCoordinates[1]] = \"*\";\n  array.push(startCoordinates);\n  document.getElementById(lastStart).classList.add(\"visited\");\n  document.getElementById(lastStart).classList.add(classToAdd);\n  \n  // while array not empty on depth-first\n  while (array.length != 0) {\n    var next;\n    \n    // gets last element like stack\n    next = array[array.length - 1];\n\n    // calculates nesw, if visited or DNE, skip. if not, add north and explore.\n    var north = calcNorth(next);\n    var east = calcEast(next);\n    var south = calcSouth(next);\n    var west = calcWest(next);\n\n    // nice animation\n    if (firstTime) {\n      await sleep(speed);\n    }\n\n    var ansNorth = resolveDepth(north, \"north\", next, classToAdd);\n    if (ansNorth === 'stop') {\n      return;\n    }\n    else if (ansNorth === 'continue') {\n      continue;\n    }\n\n    var ansEast = resolveDepth(east, \"east\", next, classToAdd);\n    if (ansEast === 'stop') {\n      return;\n    }\n    else if (ansEast === 'continue') {\n      continue;\n    }\n\n    var ansSouth = resolveDepth(south, \"south\", next, classToAdd);\n    if (ansSouth === 'stop') {\n      return;\n    }\n    else if (ansSouth === 'continue') {\n      continue;\n    }\n\n    var ansWest = resolveDepth(west, \"west\", next, classToAdd);\n    if (ansWest === 'stop') {\n      return;\n    }\n    else if (ansWest === 'continue') {\n      continue;\n    }\n\n    // if reached here, no neighbors. just pop.\n    array.pop();\n\n    if (array.length === 0) {\n      element.classList.remove(\"unclickable\");\n    }\n  }\n}\n\nasync function printPath() {\n  var endCoords = findCoords(lastEnd);\n  \n  var forwardPath = [];\n  // go back until we find the start node\n  while (backtrack[endCoords[0]][endCoords[1]] !== \"*\") {\n    forwardPath.push(endCoords);\n    \n    // we came here from NORTH, to backtrack, so SOUTH\n    if (backtrack[endCoords[0]][endCoords[1]] === \"n\") {\n      endCoords = [endCoords[0] + 1, endCoords[1]];\n    }\n\n    else if (backtrack[endCoords[0]][endCoords[1]] === \"e\") {\n      endCoords = [endCoords[0], endCoords[1] - 1];\n    }\n\n    else if (backtrack[endCoords[0]][endCoords[1]] === \"s\") {\n      endCoords = [endCoords[0] - 1, endCoords[1]];\n    }\n\n    else if (backtrack[endCoords[0]][endCoords[1]] === \"w\") {\n      endCoords = [endCoords[0], endCoords[1] + 1];\n    }\n  }\n  forwardPath.push(endCoords);\n\n  for (var x = forwardPath.length - 1; x >= 0; --x) {\n    if (firstTime) {\n      await sleep(20);\n      document.getElementById(''+String(forwardPath[x][0])+'-'+String(forwardPath[x][1])).classList.add('path-animation');\n    }\n    else {\n      document.getElementById(''+String(forwardPath[x][0])+'-'+String(forwardPath[x][1])).classList.add('path');\n    }\n  }\n  \n\n}\n\n// clear all other buttons\nfunction clearOtherButtons() {\n  var buttons = document.getElementsByClassName(\"algorithms\");\n  for (var x = 0; x < buttons.length; ++x) {\n    buttons[x].classList.remove(\"selected\");\n  }\n}\n\n// set visualization to depth first search\nfunction setDepthFirst() {\n  clearOtherButtons();\n  algorithm = \"depth-first\";\n  var buttons = document.getElementsByClassName(\"depth-first\");\n  buttons[0].classList.add(\"selected\");\n}\n\nfunction setBreadthFirst() {\n  clearOtherButtons();\n  algorithm = \"breadth-first\";\n  var buttons = document.getElementsByClassName(\"breadth-first\");\n  buttons[0].classList.add(\"selected\");\n}\n\n// calls correct algorithm to visualize\nfunction visualize() {\n  visualized = true;\n  if (algorithm === \"depth-first\") {\n    depth();\n    if (document.getElementById(lastEnd).classList.contains(\"visited\")) {\n      printPath();\n    }\n    // element.classList.remove(\"unclickable\");\n  }\n  else if (algorithm === \"breadth-first\") {\n    breadth();\n    if (document.getElementById(lastEnd).classList.contains(\"visited\")) {\n      printPath();\n    }\n    // element.classList.remove(\"unclickable\");\n  }\n  else {\n    visualized = false;\n    alert(\"Choose an algorithm on the left!\");\n  }\n}\n\n// sleep function allowing users to see search \nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n// creating random maze\nasync function randomMaze(value) {\n  clearBoard();\n  for (var i = 0; i < 30; ++i) {\n    for (var j = 0; j < 55; ++j) {\n      var idValue = \"\" + String(i) + \"-\" + String(j);\n      var random = document.getElementById(idValue);\n      if (Math.floor(Math.random() * value) === 1) {\n        if (!(idValue === lastStart || idValue === lastEnd)) {\n          random.classList.add(\"wall\");\n          random.classList.add(\"none\");\n          await sleep(15);\n        }\n      }\n    }\n  }\n}\n\nfunction clearFirstTime() {\n  firstTime = true;\n}\n\nfunction resetSpeed() {\n  document.getElementById('button-fast').classList.remove('select-speed');\n  document.getElementById('button-normal').classList.remove('select-speed');\n  document.getElementById('button-slow').classList.remove('select-speed');\n}\n\nfunction setFast() {\n  resetSpeed();\n  document.getElementById('button-fast').classList.add('select-speed');\n  speed = 5;\n}\n\nfunction setNormal() {\n  resetSpeed();\n  document.getElementById('button-normal').classList.add('select-speed');\n  speed = 35;\n}\n\nfunction setSlow() {\n  resetSpeed();\n  document.getElementById('button-slow').classList.add('select-speed');\n  speed = 85;\n}\n\n// modifying where the startNode is\nlet startNode = \"14-11\";\nlet startClick = \"\";\nlet lastStart = \"14-11\";\nlet hadWallStart = false;\n\n// modifying where the endNode is\nlet endNode = \"14-43\";\nlet endClick = \"\";\nlet lastEnd = \"14-43\";\nlet hadWallEnd = false;\n\n// modifying making and clearing walls\nlet clicked = 0;\nlet listChanged = [];\nlet element = document.getElementsByTagName(\"body\")[0];\n\n// setting which algorithm, and put backtracking\nlet algorithm = \"\";\nlet visualized = false;\nlet backtrack = [];\nlet array = [];\nlet firstTime = true;\n\n// speed\nlet speed = 5;\n\n// entire body mouseup/down, keeping track when creating walls\nelement.addEventListener(\"mousedown\", function() {\n  clicked = 1;\n});\nelement.addEventListener(\"mouseup\", function() {\n  clicked = 0;\n  listChanged = [];\n});\n\nfunction Start(props) {\n  return(\n    <i id=\"start-icon\" className=\"far fa-arrow-alt-circle-right start\"></i>\n  );\n}\n\nfunction End(props) {\n  return(\n    <i id=\"end-icon\" className=\"fas fa-gift start\"></i>\n  );\n}\n\nfunction RandomSparse(props) {\n  return(\n    <button onClick={props.onClick} className=\"random-maze pt-1 pb-1 pl-2 pr-2 mr-5 mb-2 mazes\"> Sparse Random Maze </button>\n  );\n}\n\nfunction RandomDense(props) {\n  return(\n    <button onClick={props.onClick} className=\"random-maze pt-1 pb-1 pl-2 pr-2 mr-5 mb-2 mazes\"> Dense Random Maze </button>\n  );\n}\n\nfunction Visualize(props) {\n  return(\n    <button onClick={props.onClick} onMouseDown={props.onMouseDown} className=\"btn btn-success bold\"> Visualize! </button>\n  );\n}\n\nfunction DepthFirst(props) {\n  return(\n    <button onClick={props.onClick} className=\"search depth-first pt-1 pb-1 pl-2 pr-2 mr-5 mb-2 algorithms\"> Depth First Search </button>\n  );\n}\n\nfunction BreadthFirst(props) {\n  return(\n    <button onClick={props.onClick} className=\"search breadth-first pt-1 pb-1 pl-2 pr-2 mr-5 mb-2 algorithms\"> Breadth First Search </button>\n  );\n}\n\nfunction ClearBoard(props) {\n  return(\n    <button className=\"btn btn-danger bold\" onClick={props.onClick}> Clear Board </button>\n  )\n}\n\nfunction Fast(props) {\n  return(\n    <button id=\"button-fast\" className=\"speed bold pt-1 pb-1 pl-3 pr-3 mb-2 select-speed\" onClick={props.onClick}> Fast </button>\n  )\n}\n\nfunction Normal(props) {\n  return(\n    <button id=\"button-normal\" className=\"speed bold pt-1 pb-1 pl-2 pr-2 mb-2 \" onClick={props.onClick}> Normal </button>\n  )\n}\n\nfunction Slow(props) {\n  return(\n    <button id=\"button-slow\" className=\"speed bold pt-1 pb-1 pl-3 pr-3 mb-2 \" onClick={props.onClick}> Slow </button>\n  )\n}\n\nReactDOM.render(\n  <Body />,\n  document.getElementById('table')\n);\n\nReactDOM.render(\n  <Start \n  />,\n  document.getElementById('14-11')\n);\n\nReactDOM.render(\n  <End />,\n  document.getElementById('14-43')\n);\n\nReactDOM.render(\n  <RandomSparse \n    onClick={() => randomMaze(12)}\n  />,\n  document.getElementById('sparse-maze-generation')\n);\n\nReactDOM.render(\n  <RandomDense \n    onClick={() => randomMaze(4)}\n  />,\n  document.getElementById('dense-maze-generation')\n);\n\nReactDOM.render(\n  <Visualize\n    onClick={() => visualize()}\n    onMouseDown={() => clearFirstTime()}\n  />,\n  document.getElementById('visualize')\n)\n\nReactDOM.render(\n  <DepthFirst\n    onClick={() => setDepthFirst()}\n  />,\n  document.getElementById('depth-first')\n)\n\nReactDOM.render(\n  <BreadthFirst\n    onClick={() => setBreadthFirst()}\n  />,\n  document.getElementById('breadth-first')\n)\n\nReactDOM.render(\n  <ClearBoard\n    onClick={() => clearBoard()}\n  />,\n  document.getElementById('clearBoard')\n)\n\nReactDOM.render(\n  <Fast\n    onClick={() => setFast()}\n  />,\n  document.getElementById('fast')\n)\n\nReactDOM.render(\n  <Normal\n    onClick={() => setNormal()}\n  />,\n  document.getElementById('normal')\n)\n\nReactDOM.render(\n  <Slow\n    onClick={() => setSlow()}\n  />,\n  document.getElementById('slow')\n)"],"sourceRoot":""}